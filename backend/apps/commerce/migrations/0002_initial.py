# Generated by Django 5.1.6 on 2025-02-27 06:56

import adjango.fields
import apps.commerce.services.gift_certificate
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('commerce', '0001_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='client',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='client', to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
        migrations.AddField(
            model_name='employee',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_%(app_label)s.%(class)s_set+', to='contenttypes.contenttype'),
        ),
        migrations.AddField(
            model_name='employeeavailabilityinterval',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availability_intervals', to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
        migrations.AddField(
            model_name='employeeleave',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leaves', to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
        migrations.AddField(
            model_name='product',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_%(app_label)s.%(class)s_set+', to='contenttypes.contenttype'),
        ),
        migrations.CreateModel(
            name='GiftCertificateOrder',
            fields=[
                ('order_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='commerce.order')),
                ('key', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
            ],
            options={
                'verbose_name': 'Gift certificate order',
                'verbose_name_plural': 'Gift certificate orders',
            },
            bases=('commerce.order',),
        ),
        migrations.AddField(
            model_name='order',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_%(app_label)s.%(class)s_set+', to='contenttypes.contenttype'),
        ),
        migrations.AddField(
            model_name='order',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
        migrations.AddField(
            model_name='giftcertificateusage',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gift_certificate_usages', to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
        migrations.CreateModel(
            name='HandMadePayment',
            fields=[
                ('payment_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='commerce.payment')),
            ],
            options={
                'verbose_name': 'Hand made payment',
                'verbose_name_plural': 'Hand made payments',
            },
            bases=('commerce.payment',),
        ),
        migrations.AddField(
            model_name='payment',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_%(app_label)s.%(class)s_set+', to='contenttypes.contenttype'),
        ),
        migrations.AddField(
            model_name='payment',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payments', to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
        migrations.AddField(
            model_name='order',
            name='payment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to='commerce.payment', verbose_name='Payment'),
        ),
        migrations.AddField(
            model_name='productprice',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prices', to='commerce.product', verbose_name='Product'),
        ),
        migrations.AddField(
            model_name='order',
            name='promocode',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='commerce.promocode', verbose_name='Promocode'),
        ),
        migrations.AddField(
            model_name='promocodeproductdiscount',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='promocodes_discounts', to='commerce.product', verbose_name='Product'),
        ),
        migrations.AddField(
            model_name='promocodeproductdiscount',
            name='specific_users',
            field=adjango.fields.AManyToManyField(blank=True, related_name='promo_codes', to=settings.AUTH_USER_MODEL, verbose_name='Specific users'),
        ),
        migrations.AddField(
            model_name='promocode',
            name='discounts',
            field=adjango.fields.AManyToManyField(blank=True, related_name='products_discounts', to='commerce.promocodeproductdiscount', verbose_name='Products discounts'),
        ),
        migrations.AddField(
            model_name='promocodeusage',
            name='promocode',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='promocode_usages', to='commerce.promocode'),
        ),
        migrations.AddField(
            model_name='promocodeusage',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='promocode_usages', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='GiftCertificate',
            fields=[
                ('product_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='commerce.product')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gift_certificates', to='commerce.product')),
            ],
            options={
                'verbose_name': 'Gift certificate',
                'verbose_name_plural': 'Gift certificates',
            },
            bases=('commerce.product', apps.commerce.services.gift_certificate.GiftCertificateService),
        ),
        migrations.AddField(
            model_name='giftcertificateusage',
            name='order',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='gift_certificate_usage', to='commerce.giftcertificateorder', verbose_name='Order'),
        ),
        migrations.AddField(
            model_name='giftcertificateorder',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='commerce.giftcertificate', verbose_name='Product'),
        ),
        migrations.AlterUniqueTogether(
            name='productprice',
            unique_together={('product', 'currency')},
        ),
        migrations.AddIndex(
            model_name='promocodeusage',
            index=models.Index(fields=['user', 'promocode'], name='commerce_pr_user_id_9c6e90_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='giftcertificateusage',
            unique_together={('order', 'user')},
        ),
    ]
