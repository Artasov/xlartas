# Generated by Django 5.1.6 on 2025-02-27 06:56

import adjango.services.base
import django.db.models.deletion
import uuid6
from django.conf import settings
from django.db import migrations, models

import apps.tbank.models
import apps.tbank.services.installment
import apps.tbank.services.payment
import apps.uuid6.field


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('commerce', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TBankInstallment',
            fields=[
                ('payment_ptr',
                 models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True,
                                      primary_key=True, serialize=False, to='commerce.payment')),
                ('order_id', apps.uuid6.field.UUIDv6Field(default=uuid6.uuid6, editable=False, unique=True,
                                                          verbose_name='Installment Order ID')),
                ('status', models.CharField(
                    choices=[('new', 'new'), ('inprogress', 'inprogress'), ('approved', 'approved'),
                             ('signed', 'signed'), ('canceled', 'canceled'), ('rejected', 'rejected')], default='new',
                    max_length=20, verbose_name='Installment Status')),
                ('chosen_bank', models.CharField(blank=True, max_length=100, null=True, verbose_name='Chosen Bank')),
                ('committed', models.BooleanField(default=False, verbose_name='Committed')),
                ('is_demo', models.BooleanField(default=False, verbose_name='Is demo is_installment_available')),
                ('tinkoff_internal_id',
                 models.CharField(blank=True, max_length=128, null=True, verbose_name='Tinkoff Form ID')),
                ('external_order_number',
                 models.CharField(blank=True, max_length=128, null=True, verbose_name='External order number')),
                ('created_at_tinkoff', models.DateTimeField(blank=True, null=True, verbose_name='Tinkoff created_at')),
                ('product_type',
                 models.CharField(blank=True, max_length=50, null=True, verbose_name='Product type from Tinkoff')),
                ('term', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Credit term (months)')),
                ('monthly_payment', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True,
                                                        verbose_name='Monthly payment')),
                ('first_name',
                 models.CharField(blank=True, max_length=100, null=True, verbose_name='Client first name')),
                ('last_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Client last name')),
                ('middle_name',
                 models.CharField(blank=True, max_length=100, null=True, verbose_name='Client middle name')),
                ('phone', models.CharField(blank=True, max_length=30, null=True, verbose_name='Client phone')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Client email')),
                ('loan_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='Loan number')),
                ('signing_type', models.CharField(blank=True, max_length=50, null=True, verbose_name='Signing type')),
                (
                    'expected_overdue_at',
                    models.DateTimeField(blank=True, null=True, verbose_name='Expected overdue at')),
                ('order_amount',
                 models.DecimalField(blank=True, decimal_places=2, help_text='В копейках', max_digits=10, null=True,
                                     verbose_name='Order amount')),
                ('credit_amount',
                 models.DecimalField(blank=True, decimal_places=2, help_text='В копейках', max_digits=10, null=True,
                                     verbose_name='Credit amount')),
                ('transfer_amount',
                 models.DecimalField(blank=True, decimal_places=2, help_text='В копейках', max_digits=10, null=True,
                                     verbose_name='Transfer amount')),
                ('first_payment', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True,
                                                      verbose_name='First payment')),
            ],
            options={
                'verbose_name': 'TBank installment payment',
                'verbose_name_plural': 'TBank installment payments',
            },
            bases=('commerce.payment', apps.tbank.services.installment.TBankInstallmentService,
                   apps.tbank.models.TBankInstallmentException),
        ),
        migrations.CreateModel(
            name='TBankCustomer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', apps.uuid6.field.UUIDv6Field(blank=True, default=uuid6.uuid6, editable=False, null=True,
                                                     verbose_name='Customer key')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL,
                                              to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'TBank customer',
                'verbose_name_plural': 'TBank customers',
            },
            bases=(models.Model, adjango.services.base.ABaseService),
        ),
        migrations.CreateModel(
            name='TBankPayment',
            fields=[
                ('payment_ptr',
                 models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True,
                                      primary_key=True, serialize=False, to='commerce.payment')),
                ('order_id', apps.uuid6.field.UUIDv6Field(default=uuid6.uuid6, editable=False, unique=True,
                                                          verbose_name='Order ID')),
                ('status', models.CharField(
                    choices=[('NEW', 'NEW'), ('FORM_SHOWED', 'FORM_SHOWED'), ('AUTHORIZING', 'AUTHORIZING'),
                             ('3DS_CHECKING', '3DS_CHECKING'), ('3DS_CHECKED', '3DS_CHECKED'),
                             ('AUTHORIZED', 'AUTHORIZED'), ('CONFIRMING', 'CONFIRMING'), ('CONFIRMED', 'CONFIRMED'),
                             ('REVERSING', 'REVERSING'), ('PARTIAL_REVERSED', 'PARTIAL_REVERSED'),
                             ('REVERSED', 'REVERSED'), ('REFUNDING', 'REFUNDING'),
                             ('PARTIAL_REFUNDED', 'PARTIAL_REFUNDED'), ('REFUNDED', 'REFUNDED'),
                             ('CANCELED', 'CANCELED'), ('DEADLINE_EXPIRED', 'DEADLINE_EXPIRED'),
                             ('REJECTED', 'REJECTED'), ('AUTH_FAIL', 'AUTH_FAIL')], default='NEW', max_length=20,
                    verbose_name='Status')),
                ('source', models.CharField(
                    choices=[('cards', 'Cards'), ('TinkoffPay', 'TinkoffPay'), ('TinkoffWallet', 'TinkoffWallet'),
                             ('qrsbp', 'СБП'), ('YandexPay', 'YandexPay')], max_length=20, verbose_name='Source')),
                ('commission',
                 models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Commission')),
                ('card_id', models.IntegerField(blank=True, null=True, verbose_name='Card ID')),
                ('user_agent', models.CharField(blank=True, max_length=500, null=True, verbose_name='User agent')),
                ('real_timezone', models.CharField(blank=True, max_length=10, null=True, verbose_name='Real timezone')),
                ('device', models.CharField(blank=True, max_length=20, null=True, verbose_name='Device')),
                ('device_os', models.CharField(blank=True, max_length=20, null=True, verbose_name='Device OS')),
                ('device_browser',
                 models.CharField(blank=True, max_length=20, null=True, verbose_name='Device browser')),
                ('customer',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='tbank.tbankcustomer',
                                   verbose_name='Customer')),
            ],
            options={
                'verbose_name': 'TBank payment',
                'verbose_name_plural': 'TBank payments',
            },
            bases=('commerce.payment', apps.tbank.services.payment.TBankPaymentService),
        ),
        migrations.CreateModel(
            name='TBankRecurringPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rebillid', models.PositiveBigIntegerField(unique=True, verbose_name='Rebill ID')),
                ('next_payment_date', models.DateTimeField(verbose_name='Next payment date')),
                ('interval_days', models.PositiveSmallIntegerField(verbose_name='Interval days')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tbank.tbankcustomer',
                                               verbose_name='Customer')),
                ('payment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='tbank.tbankpayment',
                                                 verbose_name='Payment')),
            ],
            options={
                'verbose_name': 'TBank recurring payment',
                'verbose_name_plural': 'TBank recurring payments',
            },
            bases=(models.Model, adjango.services.base.ABaseService),
        ),
    ]
