# Generated by Django 5.1.6 on 2025-02-27 06:56

import adjango.services.base
import django.contrib.auth.validators
import django.utils.timezone
import imagekit.models.fields
import phonenumber_field.modelfields
import timezone_field.fields
from django.db import migrations, models

import apps.core.managers.user
import apps.core.models.user
import apps.core.services.user.mixer


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False,
                                                     help_text='Designates that this user has all permissions without explicitly assigning them.',
                                                     verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'},
                                              help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.',
                                              max_length=150, unique=True,
                                              validators=[django.contrib.auth.validators.UnicodeUsernameValidator()],
                                              verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False,
                                                 help_text='Designates whether the user can log into this admin site.',
                                                 verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True,
                                                  help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.',
                                                  verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('password', models.CharField(blank=True, max_length=128, verbose_name='Password')),
                (
                    'email',
                    models.EmailField(blank=True, db_index=True, max_length=254, null=True, verbose_name='Email')),
                ('phone',
                 phonenumber_field.modelfields.PhoneNumberField(blank=True, db_index=True, max_length=128, null=True,
                                                                region=None)),
                ('middle_name', models.CharField(blank=True, max_length=150, verbose_name='Middle name')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Birth date')),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female')], max_length=10,
                                            null=True, verbose_name='Gender')),
                ('avatar',
                 imagekit.models.fields.ProcessedImageField(blank=True, null=True, upload_to='user/images/avatar/',
                                                            verbose_name='Avatar')),
                ('timezone', timezone_field.fields.TimeZoneField(default='UTC')),
                ('is_email_confirmed', models.BooleanField(default=False, verbose_name='Is email confirmed')),
                ('is_phone_confirmed', models.BooleanField(default=False, verbose_name='Is phone confirmed')),
                ('is_test', models.BooleanField(default=False, verbose_name='Is test')),
                ('secret_key', models.CharField(default=apps.core.models.user.generate_custom_key, max_length=20)),
                (
                    'referral_code',
                    models.CharField(default=apps.core.models.user.generate_referral_code, max_length=10)),
                ('hw_id', models.CharField(blank=True, default=None, max_length=600, null=True)),
                ('is_confirmed', models.BooleanField(default=False)),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('groups', models.ManyToManyField(blank=True,
                                                  help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.',
                                                  related_name='user_set', related_query_name='user', to='auth.group',
                                                  verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.',
                                                            related_name='user_set', related_query_name='user',
                                                            to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, adjango.services.base.ABaseService),
            managers=[
                ('objects', apps.core.managers.user.UserManager()),
            ],
        ),
    ]
