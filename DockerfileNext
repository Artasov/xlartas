# DockerfileNext
# -------- Next.js (Node) production image --------
FROM node:20-alpine AS deps
WORKDIR /app

COPY ./frontend/package.json ./frontend/yarn.lock* ./frontend/package-lock.json* ./

# Сначала пытаемся установить через yarn (если есть yarn.lock),
# иначе падаем обратно на npm с --legacy-peer-deps, чтобы не умирать на peer deps (CRA-хвосты и т.п.)
RUN corepack enable && \
    if [ -f yarn.lock ]; then \
      yarn install --frozen-lockfile; \
    elif [ -f package-lock.json ]; then \
      npm ci --legacy-peer-deps; \
    else \
      npm i --legacy-peer-deps; \
    fi

FROM node:20-alpine AS builder
WORKDIR /app
COPY ./frontend/ ./
COPY --from=deps /app/node_modules ./node_modules

ENV NEXT_TELEMETRY_DISABLED=1
RUN corepack enable && \
    if [ -f yarn.lock ]; then \
      yarn build; \
    else \
      npm run build; \
    fi

FROM node:20-alpine AS runner
WORKDIR /app
ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1

# Копируем собранный проект и node_modules
COPY --from=builder /app ./

EXPOSE 3000

# Запускаем стандартный сервер Next
CMD [ "sh", "-c", "corepack enable >/dev/null 2>&1 || true; if [ -f yarn.lock ]; then yarn start -p 3000; else npm run start -- -p 3000; fi" ]
